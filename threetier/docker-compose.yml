version: "3.9"

services:
  db:
    image: postgres:17
    container_name: three_tier_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./backend
    container_name: three_tier_api
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${API_PORT}
      DATABASE_URL: ${DATABASE_URL}
      CORS_ORIGIN: ${CORS_ORIGIN}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:4000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/readyz"]
      interval: 5s
      timeout: 3s
      retries: 20
    command: ["sh", "-c", "./scripts/wait-for.sh node src/index.js"]

  web:
    build:
      context: ./frontend
    container_name: three_tier_web
    environment:
      VITE_API_BASE: "http://localhost:${API_PORT}/api"
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "5173:5173"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  db_data: